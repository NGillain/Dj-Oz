Algorithme de base pour Interprete

Interprete prend en argument un des trois cas ci-dessous et retourne
dans tous les cas un record echantillon(...)

1. Faire du pattern matching pour séparer les cas où Partition est:

- Une suite de partition
==>la décomposer en une partition et la traiter dans le pattern matching

- Une partition
==> Pour chaque éléments dans la partition(transformation, note ou somme
de partition), utiliser flatten et traiter chaque Atom ou record avec le
pattern matching

- Une Note
==>appliquer ToNote pour obtenir un note(...) et ensuite appliquer une
nouvelle fonction {NoteToEchantillon Note} qui retourne un echantillon à
partir d'une Note

- Une transormation
==>décomposer la partition en une liste d'echantillon avec les champs
modifiés en conséquence.

Les fonctions suivantes doivent être implémentées correctement pour
que le pattern matching fonctionne:

- NoteToEchantillon : transforme une Note en record echantillon()

- Flatten : réduit une liste de liste de ... en une liste simple d'Atom
et de records.